{
  "contractName": "RopstenLINK",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x06fdde03"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x313ce567"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x39509351"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x40c10f19"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x42966c68"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x79cc6790"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x95d89b41"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x983b2d56"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x98650275"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa457c2d7"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa9059cbb"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xaa271e1a"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xdd62ed3e"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event",
      "signature": "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event",
      "signature": "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "kill",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x41c0e1b5"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b50604080518082018252600b81527f526f707374656e4c494e4b00000000000000000000000000000000000000000060208083019182528351808501909452600484527f4c494e4b00000000000000000000000000000000000000000000000000000000908401528151919291601291620000909160039190620001cf565b508151620000a6906004906020850190620001cf565b506005805460ff191660ff9290921691909117905550620000d2905033640100000000620000ea810204565b60078054600160a060020a0319163317905562000274565b6200010560068264010000000062000c326200013c82021704565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b600160a060020a03811615156200015257600080fd5b62000167828264010000000062000197810204565b156200017257600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000600160a060020a0382161515620001af57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200021257805160ff191683800117855562000242565b8280016001018555821562000242579182015b828111156200024257825182559160200191906001019062000225565b506200025092915062000254565b5090565b6200027191905b808211156200025057600081556001016200025b565b90565b610cf880620002846000396000f3fe608060405234801561001057600080fd5b5060043610610133576000357c01000000000000000000000000000000000000000000000000000000009004806370a08231116100bf578063986502751161008e5780639865027514610362578063a457c2d71461036a578063a9059cbb14610396578063aa271e1a146103c2578063dd62ed3e146103e857610133565b806370a08231146102e257806379cc67901461030857806395d89b4114610334578063983b2d561461033c57610133565b8063313ce56711610106578063313ce56714610245578063395093511461026357806340c10f191461028f57806341c0e1b5146102bb57806342966c68146102c557610133565b806306fdde0314610138578063095ea7b3146101b557806318160ddd146101f557806323b872dd1461020f575b600080fd5b610140610416565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017a578181015183820152602001610162565b50505050905090810190601f1680156101a75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101e1600480360360408110156101cb57600080fd5b50600160a060020a0381351690602001356104ac565b604080519115158252519081900360200190f35b6101fd61052a565b60408051918252519081900360200190f35b6101e16004803603606081101561022557600080fd5b50600160a060020a03813581169160208101359091169060400135610530565b61024d6105f9565b6040805160ff9092168252519081900360200190f35b6101e16004803603604081101561027957600080fd5b50600160a060020a038135169060200135610602565b6101e1600480360360408110156102a557600080fd5b50600160a060020a0381351690602001356106b2565b6102c36106db565b005b6102c3600480360360208110156102db57600080fd5b5035610700565b6101fd600480360360208110156102f857600080fd5b5035600160a060020a031661070d565b6102c36004803603604081101561031e57600080fd5b50600160a060020a038135169060200135610728565b610140610736565b6102c36004803603602081101561035257600080fd5b5035600160a060020a0316610797565b6102c36107b4565b6101e16004803603604081101561038057600080fd5b50600160a060020a0381351690602001356107bf565b6101e1600480360360408110156103ac57600080fd5b50600160a060020a03813516906020013561080a565b6101e1600480360360208110156103d857600080fd5b5035600160a060020a0316610817565b6101fd600480360360408110156103fe57600080fd5b50600160a060020a0381358116916020013516610830565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104a25780601f10610477576101008083540402835291602001916104a2565b820191906000526020600020905b81548152906001019060200180831161048557829003601f168201915b5050505050905090565b6000600160a060020a03831615156104c357600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a0383166000908152600160209081526040808320338452909152812054610564908363ffffffff61085b16565b600160a060020a0385166000908152600160209081526040808320338452909152902055610593848484610870565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60055460ff1690565b6000600160a060020a038316151561061957600080fd5b336000908152600160209081526040808320600160a060020a038716845290915290205461064d908363ffffffff61093d16565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b60006106bd33610817565b15156106c857600080fd5b6106d28383610956565b50600192915050565b600754600160a060020a031633146106f257600080fd5b600754600160a060020a0316ff5b61070a3382610a00565b50565b600160a060020a031660009081526020819052604090205490565b6107328282610aa9565b5050565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104a25780601f10610477576101008083540402835291602001916104a2565b6107a033610817565b15156107ab57600080fd5b61070a81610b6b565b6107bd33610bb3565b565b6000600160a060020a03831615156107d657600080fd5b336000908152600160209081526040808320600160a060020a038716845290915290205461064d908363ffffffff61085b16565b60006106d2338484610870565b600061082a60068363ffffffff610bfb16565b92915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b60008282111561086a57600080fd5b50900390565b600160a060020a038216151561088557600080fd5b600160a060020a0383166000908152602081905260409020546108ae908263ffffffff61085b16565b600160a060020a0380851660009081526020819052604080822093909355908416815220546108e3908263ffffffff61093d16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561094f57600080fd5b9392505050565b600160a060020a038216151561096b57600080fd5b60025461097e908263ffffffff61093d16565b600255600160a060020a0382166000908152602081905260409020546109aa908263ffffffff61093d16565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a0382161515610a1557600080fd5b600254610a28908263ffffffff61085b16565b600255600160a060020a038216600090815260208190526040902054610a54908263ffffffff61085b16565b600160a060020a038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b600160a060020a0382166000908152600160209081526040808320338452909152902054610add908263ffffffff61085b16565b600160a060020a0383166000908152600160209081526040808320338452909152902055610b0b8282610a00565b600160a060020a0382166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35050565b610b7c60068263ffffffff610c3216565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610bc460068263ffffffff610c8016565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a0382161515610c1257600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a0381161515610c4757600080fd5b610c518282610bfb565b15610c5b57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a0381161515610c9557600080fd5b610c9f8282610bfb565b1515610caa57600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fea165627a7a72305820a3141e34ad6b56af7daa66d027ef8c851afa0bd4de3fe2d240dfcabc4a7793c00029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610133576000357c01000000000000000000000000000000000000000000000000000000009004806370a08231116100bf578063986502751161008e5780639865027514610362578063a457c2d71461036a578063a9059cbb14610396578063aa271e1a146103c2578063dd62ed3e146103e857610133565b806370a08231146102e257806379cc67901461030857806395d89b4114610334578063983b2d561461033c57610133565b8063313ce56711610106578063313ce56714610245578063395093511461026357806340c10f191461028f57806341c0e1b5146102bb57806342966c68146102c557610133565b806306fdde0314610138578063095ea7b3146101b557806318160ddd146101f557806323b872dd1461020f575b600080fd5b610140610416565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017a578181015183820152602001610162565b50505050905090810190601f1680156101a75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101e1600480360360408110156101cb57600080fd5b50600160a060020a0381351690602001356104ac565b604080519115158252519081900360200190f35b6101fd61052a565b60408051918252519081900360200190f35b6101e16004803603606081101561022557600080fd5b50600160a060020a03813581169160208101359091169060400135610530565b61024d6105f9565b6040805160ff9092168252519081900360200190f35b6101e16004803603604081101561027957600080fd5b50600160a060020a038135169060200135610602565b6101e1600480360360408110156102a557600080fd5b50600160a060020a0381351690602001356106b2565b6102c36106db565b005b6102c3600480360360208110156102db57600080fd5b5035610700565b6101fd600480360360208110156102f857600080fd5b5035600160a060020a031661070d565b6102c36004803603604081101561031e57600080fd5b50600160a060020a038135169060200135610728565b610140610736565b6102c36004803603602081101561035257600080fd5b5035600160a060020a0316610797565b6102c36107b4565b6101e16004803603604081101561038057600080fd5b50600160a060020a0381351690602001356107bf565b6101e1600480360360408110156103ac57600080fd5b50600160a060020a03813516906020013561080a565b6101e1600480360360208110156103d857600080fd5b5035600160a060020a0316610817565b6101fd600480360360408110156103fe57600080fd5b50600160a060020a0381358116916020013516610830565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104a25780601f10610477576101008083540402835291602001916104a2565b820191906000526020600020905b81548152906001019060200180831161048557829003601f168201915b5050505050905090565b6000600160a060020a03831615156104c357600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a0383166000908152600160209081526040808320338452909152812054610564908363ffffffff61085b16565b600160a060020a0385166000908152600160209081526040808320338452909152902055610593848484610870565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60055460ff1690565b6000600160a060020a038316151561061957600080fd5b336000908152600160209081526040808320600160a060020a038716845290915290205461064d908363ffffffff61093d16565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b60006106bd33610817565b15156106c857600080fd5b6106d28383610956565b50600192915050565b600754600160a060020a031633146106f257600080fd5b600754600160a060020a0316ff5b61070a3382610a00565b50565b600160a060020a031660009081526020819052604090205490565b6107328282610aa9565b5050565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104a25780601f10610477576101008083540402835291602001916104a2565b6107a033610817565b15156107ab57600080fd5b61070a81610b6b565b6107bd33610bb3565b565b6000600160a060020a03831615156107d657600080fd5b336000908152600160209081526040808320600160a060020a038716845290915290205461064d908363ffffffff61085b16565b60006106d2338484610870565b600061082a60068363ffffffff610bfb16565b92915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b60008282111561086a57600080fd5b50900390565b600160a060020a038216151561088557600080fd5b600160a060020a0383166000908152602081905260409020546108ae908263ffffffff61085b16565b600160a060020a0380851660009081526020819052604080822093909355908416815220546108e3908263ffffffff61093d16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561094f57600080fd5b9392505050565b600160a060020a038216151561096b57600080fd5b60025461097e908263ffffffff61093d16565b600255600160a060020a0382166000908152602081905260409020546109aa908263ffffffff61093d16565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a0382161515610a1557600080fd5b600254610a28908263ffffffff61085b16565b600255600160a060020a038216600090815260208190526040902054610a54908263ffffffff61085b16565b600160a060020a038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b600160a060020a0382166000908152600160209081526040808320338452909152902054610add908263ffffffff61085b16565b600160a060020a0383166000908152600160209081526040808320338452909152902055610b0b8282610a00565b600160a060020a0382166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35050565b610b7c60068263ffffffff610c3216565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610bc460068263ffffffff610c8016565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a0382161515610c1257600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a0381161515610c4757600080fd5b610c518282610bfb565b15610c5b57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a0381161515610c9557600080fd5b610c9f8282610bfb565b1515610caa57600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fea165627a7a72305820a3141e34ad6b56af7daa66d027ef8c851afa0bd4de3fe2d240dfcabc4a7793c00029",
  "sourceMap": "315:462:3:-;;;530:151;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;405:163:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;493:12;;405:163;;;623:2:3;;493:12:12;;:5;;405:163;493:12;:::i;:::-;-1:-1:-1;515:16:12;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;541:9:12;:20;;-1:-1:-1;;541:20:12;;;;;;;;;;;;-1:-1:-1;275:22:8;;-1:-1:-1;286:10:8;275;;;;:22;:::i;:::-;658:5:3;:18;;-1:-1:-1;;;;;;658:18:3;666:10;658:18;;;315:462;;685:119:8;741:21;:8;754:7;741:12;;;;;;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:8;;;;;;;;685:119;:::o;259:181:7:-;-1:-1:-1;;;;;335:21:7;;;;327:30;;;;;;376:18;380:4;386:7;376:3;;;;:18;:::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:7;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:7;429:4;406:27;;;259:181::o;786:162::-;858:4;-1:-1:-1;;;;;882:21:7;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:7;:11;:20;;;;;;;;;;;;;;;786:162::o;315:462:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;315:462:3;;;-1:-1:-1;315:462:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "315:462:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;315:462:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;628:81:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2735:238:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2735:238:10;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;936:89;;;:::i;:::-;;;;;;;;;;;;;;;;3436:294;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3436:294:10;;;;;;;;;;;;;;;;;:::i;930:81:12:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4233:317:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4233:317:10;;;;;;;;:::i;443:128:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;443:128:13;;;;;;;;:::i;685:89:3:-;;;:::i;:::-;;295:77:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;295:77:11;;:::i;1234:104:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1234:104:10;-1:-1:-1;;;;;1234:104:10;;:::i;624:93:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;624:93:11;;;;;;;;:::i;771:85:12:-;;;:::i;508:90:8:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;508:90:8;-1:-1:-1;;;;;508:90:8;;:::i;604:75::-;;;:::i;5058:327:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5058:327:10;;;;;;;;:::i;1962:137::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1962:137:10;;;;;;;;:::i;395:107:8:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;395:107:8;-1:-1:-1;;;;;395:107:8;;:::i;1669:129:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1669:129:10;;;;;;;;;;:::i;628:81:12:-;697:5;690:12;;;;;;;;-1:-1:-1;;690:12:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:13;;690:12;;697:5;;690:12;;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;:::o;2735:238:10:-;2800:4;-1:-1:-1;;;;;2824:21:10;;;;2816:30;;;;;;2866:10;2857:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2857:29:10;;;;;;;;;;;;:37;;;2909:36;;;;;;;2857:29;;2866:10;2909:36;;;;;;;;;;;-1:-1:-1;2962:4:10;2735:238;;;;:::o;936:89::-;1006:12;;936:89;:::o;3436:294::-;-1:-1:-1;;;;;3560:14:10;;3515:4;3560:14;;;:8;:14;;;;;;;;3575:10;3560:26;;;;;;;;:37;;3591:5;3560:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3531:14:10;;;;;;:8;:14;;;;;;;;3546:10;3531:26;;;;;;;:66;3607:26;3540:4;3623:2;3627:5;3607:9;:26::i;:::-;-1:-1:-1;;;;;3648:54:10;;3675:14;;;;:8;:14;;;;;;;;3663:10;3675:26;;;;;;;;;;;3648:54;;;;;;;3663:10;;3648:54;;;;;;;;;;;;-1:-1:-1;3719:4:10;3436:294;;;;;:::o;930:81:12:-;995:9;;;;930:81;:::o;4233:317:10:-;4313:4;-1:-1:-1;;;;;4337:21:10;;;;4329:30;;;;;;4411:10;4402:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4402:29:10;;;;;;;;;;:45;;4436:10;4402:45;:33;:45;:::i;:::-;4379:10;4370:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4370:29:10;;;;;;;;;;;;:77;;;4462:60;;;;;;4370:29;;4462:60;;;;;;;;;;;-1:-1:-1;4539:4:10;4233:317;;;;:::o;443:128:13:-;511:4;350:20:8;359:10;350:8;:20::i;:::-;342:29;;;;;;;;527:16:13;533:2;537:5;527;:16::i;:::-;-1:-1:-1;560:4:13;443:128;;;;:::o;685:89:3:-;738:5;;-1:-1:-1;;;;;738:5:3;724:10;:19;716:28;;;;;;763:5;;-1:-1:-1;;;;;763:5:3;750:19;295:77:11;341:24;347:10;359:5;341;:24::i;:::-;295:77;:::o;1234:104:10:-;-1:-1:-1;;;;;1315:16:10;1289:7;1315:16;;;;;;;;;;;;1234:104::o;624:93:11:-;688:22;698:4;704:5;688:9;:22::i;:::-;624:93;;:::o;771:85:12:-;842:7;835:14;;;;;;;;-1:-1:-1;;835:14:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:13;;835:14;;842:7;;835:14;;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;508:90:8;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;;;572:19;583:7;572:10;:19::i;604:75::-;647:25;661:10;647:13;:25::i;:::-;604:75::o;5058:327:10:-;5143:4;-1:-1:-1;;;;;5167:21:10;;;;5159:30;;;;;;5241:10;5232:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5232:29:10;;;;;;;;;;:50;;5266:15;5232:50;:33;:50;:::i;1962:137::-;2023:4;2039:32;2049:10;2061:2;2065:5;2039:9;:32::i;395:107:8:-;451:4;474:21;:8;487:7;474:21;:12;:21;:::i;:::-;467:28;395:107;-1:-1:-1;;395:107:8:o;1669:129:10:-;-1:-1:-1;;;;;1767:15:10;;;1741:7;1767:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1669:129::o;1205:145:9:-;1263:7;1290:6;;;;1282:15;;;;;;-1:-1:-1;1319:5:9;;;1205:145::o;5599:256:10:-;-1:-1:-1;;;;;5686:16:10;;;;5678:25;;;;;;-1:-1:-1;;;;;5732:15:10;;:9;:15;;;;;;;;;;;:26;;5752:5;5732:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5714:15:10;;;:9;:15;;;;;;;;;;;:44;;;;5784:13;;;;;;;:24;;5802:5;5784:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5768:13:10;;;:9;:13;;;;;;;;;;;;:40;;;;5823:25;;;;;;;5768:13;;5823:25;;;;;;;;;;;;;5599:256;;;:::o;1431:145:9:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:9:o;6198:263:10:-;-1:-1:-1;;;;;6272:21:10;;;;6264:30;;;;;;6320:12;;:23;;6337:5;6320:23;:16;:23;:::i;:::-;6305:12;:38;-1:-1:-1;;;;;6374:18:10;;:9;:18;;;;;;;;;;;:29;;6397:5;6374:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6353:18:10;;:9;:18;;;;;;;;;;;:50;;;;6418:36;;;;;;;6353:18;;:9;;6418:36;;;;;;;;;;6198:263;;:::o;6687:::-;-1:-1:-1;;;;;6761:21:10;;;;6753:30;;;;;;6809:12;;:23;;6826:5;6809:23;:16;:23;:::i;:::-;6794:12;:38;-1:-1:-1;;;;;6863:18:10;;:9;:18;;;;;;;;;;;:29;;6886:5;6863:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6842:18:10;;:9;:18;;;;;;;;;;;:50;;;;6907:36;;;;;;;6842:9;;6907:36;;;;;;;;;;;6687:263;;:::o;7339:255::-;-1:-1:-1;;;;;7441:17:10;;;;;;:8;:17;;;;;;;;7459:10;7441:29;;;;;;;;:40;;7475:5;7441:40;:33;:40;:::i;:::-;-1:-1:-1;;;;;7409:17:10;;;;;;:8;:17;;;;;;;;7427:10;7409:29;;;;;;;:72;7491:21;7418:7;7506:5;7491;:21::i;:::-;-1:-1:-1;;;;;7527:60:10;;7557:17;;;;:8;:17;;;;;;;;7545:10;7557:29;;;;;;;;;;;7527:60;;;;;;;7545:10;;7527:60;;;;;;;;;;;;7339:255;;:::o;685:119:8:-;741:21;:8;754:7;741:21;:12;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:8;;;;;;;;685:119;:::o;810:127::-;869:24;:8;885:7;869:24;:15;:24;:::i;:::-;908:22;;-1:-1:-1;;;;;908:22:8;;;;;;;;810:127;:::o;786:162:7:-;858:4;-1:-1:-1;;;;;882:21:7;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:7;:11;:20;;;;;;;;;;;;;;;786:162::o;259:181::-;-1:-1:-1;;;;;335:21:7;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:7;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:7;429:4;406:27;;;259:181::o;514:184::-;-1:-1:-1;;;;;593:21:7;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;-1:-1:-1;;;;;663:20:7;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:7;;;514:184::o",
  "source": "pragma solidity >=0.4.24 <0.6.0;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\";\n\ncontract RopstenLINK is ERC20, ERC20Detailed, ERC20Mintable, ERC20Burnable {\n    //string public name = \"Stable\";\n    //string public symbol = \"STBLE\";\n    //uint8 public decimals = 18;\n\n  address payable owner;\n\n  constructor()\n    ERC20Burnable()\n    ERC20Mintable()\n    ERC20Detailed(\"RopstenLINK\",\"LINK\",18)\n    ERC20()\n    public\n  {\n    owner = msg.sender;\n  }\n\n  function kill() public\n  {\n    require(msg.sender == owner);\n    selfdestruct(owner);\n  }\n\n}\n",
  "sourcePath": "/home/vagrant/DAPPS/smartpiggiesGithub/smartpiggies/contracts/RopstenLINK.sol",
  "ast": {
    "absolutePath": "/home/vagrant/DAPPS/smartpiggiesGithub/smartpiggies/contracts/RopstenLINK.sol",
    "exportedSymbols": {
      "RopstenLINK": [
        169
      ]
    },
    "id": 170,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 119,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".24",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 120,
        "nodeType": "ImportDirective",
        "scope": 170,
        "sourceUnit": 3374,
        "src": "34:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 121,
        "nodeType": "ImportDirective",
        "scope": 170,
        "sourceUnit": 3463,
        "src": "98:71:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol",
        "id": 122,
        "nodeType": "ImportDirective",
        "scope": 170,
        "sourceUnit": 3405,
        "src": "170:71:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 123,
        "nodeType": "ImportDirective",
        "scope": 170,
        "sourceUnit": 3491,
        "src": "242:71:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 124,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3373,
              "src": "339:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3373",
                "typeString": "contract ERC20"
              }
            },
            "id": 125,
            "nodeType": "InheritanceSpecifier",
            "src": "339:5:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 126,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3462,
              "src": "346:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$3462",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 127,
            "nodeType": "InheritanceSpecifier",
            "src": "346:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 128,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3490,
              "src": "361:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$3490",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 129,
            "nodeType": "InheritanceSpecifier",
            "src": "361:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 130,
              "name": "ERC20Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3404,
              "src": "376:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Burnable_$3404",
                "typeString": "contract ERC20Burnable"
              }
            },
            "id": 131,
            "nodeType": "InheritanceSpecifier",
            "src": "376:13:3"
          }
        ],
        "contractDependencies": [
          2813,
          3373,
          3404,
          3462,
          3490,
          3559
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 169,
        "linearizedBaseContracts": [
          169,
          3404,
          3490,
          2813,
          3462,
          3373,
          3559
        ],
        "name": "RopstenLINK",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 133,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 169,
            "src": "504:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 132,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "504:15:3",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 152,
              "nodeType": "Block",
              "src": "652:29:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 147,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "658:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 148,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3574,
                        "src": "666:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "666:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "658:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "658:18:3"
                }
              ]
            },
            "documentation": null,
            "id": 153,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 136,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 135,
                  "name": "ERC20Burnable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3404,
                  "src": "548:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Burnable_$3404_$",
                    "typeString": "type(contract ERC20Burnable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "548:15:3"
              },
              {
                "arguments": [],
                "id": 138,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 137,
                  "name": "ERC20Mintable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3490,
                  "src": "568:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$3490_$",
                    "typeString": "type(contract ERC20Mintable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "568:15:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "526f707374656e4c494e4b",
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "602:13:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e4cfa9ac6f610b35f141c3bc4f625646c6daa52c81603b38ee9492d00622db38",
                      "typeString": "literal_string \"RopstenLINK\""
                    },
                    "value": "RopstenLINK"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4c494e4b",
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "616:6:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_921a3539bcb764c889432630877414523e7fbca00c211bc787aeae69e2e3a779",
                      "typeString": "literal_string \"LINK\""
                    },
                    "value": "LINK"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "623:2:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 143,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 139,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3462,
                  "src": "588:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$3462_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "588:38:3"
              },
              {
                "arguments": [],
                "id": 145,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 144,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3373,
                  "src": "631:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$3373_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "631:7:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "541:2:3"
            },
            "returnParameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "652:0:3"
            },
            "scope": 169,
            "src": "530:151:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 167,
              "nodeType": "Block",
              "src": "710:64:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 157,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3574,
                            "src": "724:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "724:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 159,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "738:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "724:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3577,
                        3578
                      ],
                      "referencedDeclaration": 3577,
                      "src": "716:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "716:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "716:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 164,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "763:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 163,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3582,
                      "src": "750:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "750:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
                  "src": "750:19:3"
                }
              ]
            },
            "documentation": null,
            "id": 168,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "kill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "698:2:3"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "710:0:3"
            },
            "scope": 169,
            "src": "685:89:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 170,
        "src": "315:462:3"
      }
    ],
    "src": "0:778:3"
  },
  "legacyAST": {
    "absolutePath": "/home/vagrant/DAPPS/smartpiggiesGithub/smartpiggies/contracts/RopstenLINK.sol",
    "exportedSymbols": {
      "RopstenLINK": [
        169
      ]
    },
    "id": 170,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 119,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".24",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 120,
        "nodeType": "ImportDirective",
        "scope": 170,
        "sourceUnit": 3374,
        "src": "34:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 121,
        "nodeType": "ImportDirective",
        "scope": 170,
        "sourceUnit": 3463,
        "src": "98:71:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol",
        "id": 122,
        "nodeType": "ImportDirective",
        "scope": 170,
        "sourceUnit": 3405,
        "src": "170:71:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 123,
        "nodeType": "ImportDirective",
        "scope": 170,
        "sourceUnit": 3491,
        "src": "242:71:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 124,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3373,
              "src": "339:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3373",
                "typeString": "contract ERC20"
              }
            },
            "id": 125,
            "nodeType": "InheritanceSpecifier",
            "src": "339:5:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 126,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3462,
              "src": "346:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$3462",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 127,
            "nodeType": "InheritanceSpecifier",
            "src": "346:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 128,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3490,
              "src": "361:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$3490",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 129,
            "nodeType": "InheritanceSpecifier",
            "src": "361:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 130,
              "name": "ERC20Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3404,
              "src": "376:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Burnable_$3404",
                "typeString": "contract ERC20Burnable"
              }
            },
            "id": 131,
            "nodeType": "InheritanceSpecifier",
            "src": "376:13:3"
          }
        ],
        "contractDependencies": [
          2813,
          3373,
          3404,
          3462,
          3490,
          3559
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 169,
        "linearizedBaseContracts": [
          169,
          3404,
          3490,
          2813,
          3462,
          3373,
          3559
        ],
        "name": "RopstenLINK",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 133,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 169,
            "src": "504:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 132,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "504:15:3",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 152,
              "nodeType": "Block",
              "src": "652:29:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 147,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "658:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 148,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3574,
                        "src": "666:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "666:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "658:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "658:18:3"
                }
              ]
            },
            "documentation": null,
            "id": 153,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 136,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 135,
                  "name": "ERC20Burnable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3404,
                  "src": "548:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Burnable_$3404_$",
                    "typeString": "type(contract ERC20Burnable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "548:15:3"
              },
              {
                "arguments": [],
                "id": 138,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 137,
                  "name": "ERC20Mintable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3490,
                  "src": "568:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$3490_$",
                    "typeString": "type(contract ERC20Mintable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "568:15:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "526f707374656e4c494e4b",
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "602:13:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e4cfa9ac6f610b35f141c3bc4f625646c6daa52c81603b38ee9492d00622db38",
                      "typeString": "literal_string \"RopstenLINK\""
                    },
                    "value": "RopstenLINK"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4c494e4b",
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "616:6:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_921a3539bcb764c889432630877414523e7fbca00c211bc787aeae69e2e3a779",
                      "typeString": "literal_string \"LINK\""
                    },
                    "value": "LINK"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "623:2:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 143,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 139,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3462,
                  "src": "588:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$3462_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "588:38:3"
              },
              {
                "arguments": [],
                "id": 145,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 144,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3373,
                  "src": "631:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$3373_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "631:7:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "541:2:3"
            },
            "returnParameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "652:0:3"
            },
            "scope": 169,
            "src": "530:151:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 167,
              "nodeType": "Block",
              "src": "710:64:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 157,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3574,
                            "src": "724:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "724:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 159,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "738:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "724:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3577,
                        3578
                      ],
                      "referencedDeclaration": 3577,
                      "src": "716:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "716:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "716:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 164,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "763:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 163,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3582,
                      "src": "750:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "750:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
                  "src": "750:19:3"
                }
              ]
            },
            "documentation": null,
            "id": 168,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "kill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "698:2:3"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "710:0:3"
            },
            "scope": 169,
            "src": "685:89:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 170,
        "src": "315:462:3"
      }
    ],
    "src": "0:778:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0x20fE562d797A42Dcb3399062AE9546cd06f63280",
      "transactionHash": "0x6f01dcdfb184e1cbcf29ec99e1e0becdad20f925f08f1f334422b13bb30cf829"
    },
    "4": {
      "events": {},
      "links": {},
      "address": "0x8B19BDE9bd23d3599c3988EaC5B4268be37ACd73",
      "transactionHash": "0xfea440d25f7a27318f56fa16d1ee3ffdaa34b4795ab7c62cf62bbdfa088b41d8"
    },
    "1550425625060": {
      "events": {},
      "links": {},
      "address": "0x3A004db91EB5ce27CF2659CFb974652d979c6C01",
      "transactionHash": "0xd5512f9230a81a841f22eb91be0e00bffa070164cd5c8578723fad63251595f1"
    },
    "1550433017055": {
      "events": {},
      "links": {},
      "address": "0xFA0b9b565DC078451Dc93a1D8e5f44ef00171f22",
      "transactionHash": "0xd8ee29b7f67e938136024331c6836c954b3efa7e0f8cd2381ea228926743ec14"
    },
    "1550434690361": {
      "events": {},
      "links": {},
      "address": "0xEAC1897f68a272b5eC3DAa6d3F979FD3dDe269eF",
      "transactionHash": "0x275878272e6d741b68c6e6b24c7e611334aa4cf1075edd0c4eaa6a1867b41807"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-02-17T20:18:44.413Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "burn(uint256)": {
        "details": "Burns a specific amount of tokens.",
        "params": {
          "value": "The amount of token to be burned."
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Burns a specific amount of tokens from the target address and decrements allowance",
        "params": {
          "from": "address The address which you want to send tokens from",
          "value": "uint256 The amount of token to be burned"
        }
      },
      "decimals()": {
        "return": "the number of decimals of the token."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "return": "the name of the token."
      },
      "symbol()": {
        "return": "the symbol of the token."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}
